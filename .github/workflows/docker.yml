# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*" # Run on all branches

env:
  REGISTRY: quay.io
  IMAGE_NAME: push-to-registry-pr
  IMAGE_TAG: ${{ github.sha }}
  USERNAME: ${{ secrets.QUAY_USERNAME }}
  PASSWORD: ${{ secrets.QUAY_PASSWORD }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Quay.io
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      - name: Build Docker Image
        run: ./docker-build.sh "$tag" "$username" "$image" "$registry"
        env:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          tag: ${{ env.IMAGE_TAG }}
          image: ${{ env.IMAGE_NAME }}

      - name: Push Docker Image
        run: ./docker-push.sh "$tag" "$username" "$image" "$registry"
        env:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          tag: ${{ env.IMAGE_TAG }}
          image: ${{ env.IMAGE_NAME }}

      - name: Modify the manifest
        run: ./k8s-deploy.sh "$tag" "$username" "$image" "$registry"
        env:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          tag: ${{ env.IMAGE_TAG }}
          image: ${{ env.IMAGE_NAME }}

      - name: Start minikube
        uses: medyagh/setup-minikube@master

      - name: Try the cluster !
        run: kubectl get pods -A

      - name: Deploy to minikube
        run: kubectl apply -f modified.yaml

      - name: Test service URLs
        run: |
          sleep 120
          minikube service list
          kubectl get deployments
          kubectl get pods
          kubectl get svc
          minikube service go-app --url
          echo "------------------opening the service------------------"
          curl $(minikube service go-app --url)
